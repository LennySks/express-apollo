scalar DateTime

type User {
    id: ID!
    username: String!
    email: String!
    posts: [Post!]!
}

type Query {
    users: [User!]!
    user(id: ID!): User
    posts(offset: Int, limit: Int): [Post!]!
    post(id: ID!): Post
}

type Mutation {
    deletePost(id: ID!): DeletePostResponse
    createPost(input: CreatePostInput!): CreatePostResponse
    updatePost(id: ID!, input: UpdatePostInput!): UpdatePostResponse
}

input CreatePostInput {
    title: String!
    content: String!
}

input UpdatePostInput {
    title: String
    content: String
}

type CreatePostResponse {
    code: Int!
    success: Boolean!
    message: String
    post: Post
}

type UpdatePostResponse {
    code: Int!
    success: Boolean!
    message: String
    post: Post
}

type DeletePostResponse {
    code: Int!
    success: Boolean!
    message: String
}

type Post {
    id :ID!
    title: String!
    content: String!
    authorId: String!
    addedAt: DateTime!
    updatedAt: DateTime
    user: User
}